package com.merchant.service.impl;

import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.merchant.dao.MerchantsMessageMapper;
import com.merchant.dto.ResultMessage;
import com.merchant.form.CommonFrom;
import com.merchant.form.MerchantsMessageBean;
import com.merchant.model.MerchantsMessage;
import com.merchant.service.MerchantsMessageService;

@Service
public class MerchantsMessageImpl implements MerchantsMessageService {
	
	private final Logger logger = Logger.getLogger(getClass());
	
	@Autowired
	private MerchantsMessageMapper merchantsMessageMapper;

	@Override
	public ResultMessage add(MerchantsMessage data) {
		try {
			merchantsMessageMapper.insertSelective(data);
		} catch (Exception e) {
			logger.error("添加商户记录失败", e);
			return new ResultMessage(false,"插入数据库失败！");
		}
		
		return new ResultMessage(true,"插入数据库成功！",data.getId());
	}

	@Override
	public ResultMessage queryByPage(CommonFrom<MerchantsMessageBean> form) {
		List<MerchantsMessage> list = null;  
		try {
			list = merchantsMessageMapper.queryByPage(form);
		} catch (Exception e) {
			logger.error("查询失败", e);
			return new ResultMessage(false,"查询失败！");
		}
		
		return new ResultMessage(true,"查询成功！",list);
	}

	@Override
	public ResultMessage update(MerchantsMessage data) {
		try {
			merchantsMessageMapper.updateByPrimaryKeySelective(data);
		} catch (Exception e) {
			logger.error("更新MerchantsMessage记录失败", e);
			return new ResultMessage(false,"更新记录失败！");
		}
		
		return new ResultMessage(true,"更新成功！");
	}

	@Override
	public ResultMessage findById(Integer id) {
		MerchantsMessage message  = null;
		try {
			  message = merchantsMessageMapper.selectByPrimaryKey(id);
		} catch (Exception e) {
			logger.error("更新MerchantsMessage记录失败", e);
			return new ResultMessage(false,"更新记录失败！");
		}
		
		return new ResultMessage(true,"更新成功！",message);
	}
	
 
	
 
	

}
