<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.didispace.dao.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.didispace.model.Customer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="c_id" property="cId" jdbcType="INTEGER" />
    <result column="file_type" property="fileType" jdbcType="VARCHAR" />
    <result column="file_size" property="fileSize" jdbcType="DOUBLE" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.didispace.model.Customer" extends="BaseResultMap" >
    <result column="fileInfo" property="fileinfo" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, c_id, file_type, file_size
  </sql>
  <sql id="Blob_Column_List" >
    fileInfo
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.didispace.model.Customer" >
    insert into t_customer (id, type, c_id, 
      file_type, file_size, fileInfo
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{cId,jdbcType=INTEGER}, 
      #{fileType,jdbcType=VARCHAR}, #{fileSize,jdbcType=DOUBLE}, #{fileinfo,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.didispace.model.Customer" >
    insert into t_customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="cId != null" >
        c_id,
      </if>
      <if test="fileType != null" >
        file_type,
      </if>
      <if test="fileSize != null" >
        file_size,
      </if>
      <if test="fileinfo != null" >
        fileInfo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="cId != null" >
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="fileinfo != null" >
        #{fileinfo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.didispace.model.Customer" >
    update t_customer
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="cId != null" >
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="fileType != null" >
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        file_size = #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="fileinfo != null" >
        fileInfo = #{fileinfo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.didispace.model.Customer" >
    update t_customer
    set type = #{type,jdbcType=VARCHAR},
      c_id = #{cId,jdbcType=INTEGER},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=DOUBLE},
      fileInfo = #{fileinfo,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.didispace.model.Customer" >
    update t_customer
    set type = #{type,jdbcType=VARCHAR},
      c_id = #{cId,jdbcType=INTEGER},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>