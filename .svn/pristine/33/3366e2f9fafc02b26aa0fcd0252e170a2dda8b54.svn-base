package com.merchant.web;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSONObject;
import com.merchant.dto.BaseAddDto;
import com.merchant.dto.BaseDto;
import com.merchant.dto.ResultMessage;
import com.merchant.dto.SupplierDetailDto;
import com.merchant.dto.SupplierQueryDto;
import com.merchant.form.CommonFrom;
import com.merchant.form.MerchantsQueryBean;
import com.merchant.model.MerchantsSupplier;
import com.merchant.service.MerchantsSupplierService;
import com.merchant.util.RequestUtil;

@RestController
@SuppressWarnings("unchecked")
public class MerchantSupplierController {

	private final Logger logger = Logger.getLogger(getClass());

	@Autowired
	private MerchantsSupplierService mtsSupplierService;

	@RequestMapping(value = "/supplier/add")
	public Object add(HttpServletRequest request) {
		String jsonText = RequestUtil.readPostContent(request);
		logger.info("/supplier/add入参：" + jsonText);
		MerchantsSupplier data = JSONObject.parseObject(jsonText, MerchantsSupplier.class);
		ResultMessage result = mtsSupplierService.add(data);
		if (result.isSuccess()) {
			Integer id = (Integer) result.getData();
			return new BaseAddDto("success", "10000",id);
		}
		return new BaseAddDto("success","90001");
	}

	@RequestMapping(value = "/supplier/query")
	public Object query(Integer id) {
		logger.info("/supplier/query入参：" + id);
		if (id == null) {
			return new SupplierDetailDto("success", "10001", "参数不全！");
		}
		MerchantsSupplier merchantsSupplier = mtsSupplierService.queryById(id);
		if (merchantsSupplier == null) {
			return new SupplierDetailDto("success", "40003", "不存在用户！");
		}
		return new SupplierDetailDto("success", "10000", merchantsSupplier);
	}

	
	@RequestMapping(value = "/supplier/list", method = RequestMethod.POST)
	public Object list(HttpServletRequest request) {
		String jsonText = RequestUtil.readPostContent(request);

		CommonFrom<MerchantsQueryBean> form = JSONObject.parseObject(jsonText, CommonFrom.class);
		ResultMessage result = mtsSupplierService.queryByPage(form); 
		
		if (result.isSuccess()) {
			List<MerchantsSupplier> list = (List<MerchantsSupplier>) result.getData();
			new SupplierQueryDto("success", "10000", form.getOffset(), form.getPageSize(), list);
		}

		return new SupplierQueryDto("success", "90001", result.getMsg(), form.getOffset(),
				form.getPageSize());
	}
	
	@RequestMapping(value = "/supplier/list/forAccount", method = RequestMethod.POST)
	public Object listforAccount(HttpServletRequest request) { 
		JSONObject jsonObj = RequestUtil.readToJSONObect(request);
		logger.info("/supplier/listforAccount入参:" + jsonObj);
		Integer accountId = jsonObj.getInteger("accountId");
		Integer offset = jsonObj.getInteger("offset");
		Integer pageSize = jsonObj.getInteger("pageSize");

		if (accountId == null || offset == null || pageSize == null) {
			return new SupplierQueryDto("success", "10001", "参数不全", 0, 0);
		}
		
		ResultMessage result = mtsSupplierService.queryByPageForAccount(accountId, offset, pageSize);
		
		if (result.isSuccess()) {
			List<MerchantsSupplier> list = (List<MerchantsSupplier>) result.getData();
			new SupplierQueryDto("success", "10000", offset, pageSize, list);
		}
		
		return new SupplierQueryDto("success", "90001", result.getMsg(), offset, pageSize);
	}

	
	@RequestMapping(value = "/supplier/update", method = RequestMethod.POST)
	public Object update(HttpServletRequest request) {
		String jsonText = RequestUtil.readPostContent(request);
		logger.info("/supplier/update入参:" + jsonText);
		MerchantsSupplier form = JSONObject.parseObject(jsonText, MerchantsSupplier.class);
		if (form.getId() == null) {
			return new BaseDto("success", "10001", "参数不全!");
		} 
		
		int count = mtsSupplierService.updateMerchantsSupplier(form);
		if (count > 0) {
			return  new BaseDto("success", "10000", "更新成功!");
		}  

		return new BaseDto("success", "90001", "更新失败!");
	}

}