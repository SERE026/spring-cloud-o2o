package com.merchant.web;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSONObject;
import com.merchant.dto.BaseResponseDto;
import com.merchant.dto.QueryMerchantsResponseDto;
import com.merchant.dto.ResultMessage;
import com.merchant.form.CommonFrom;
import com.merchant.form.MerchantsMessageBean;
import com.merchant.model.MerchantsMessage;
import com.merchant.service.MerchantsMessageService;
import com.merchant.util.RequestUtil;

@RestController
public class MerchantsMessageController {

	private final Logger logger = Logger.getLogger(getClass());


	@Autowired
	private MerchantsMessageService merchantsMessageService;

	@RequestMapping(value = "/message/add" ,method = RequestMethod.POST)
	public Object messageAdd(HttpServletRequest request){

		String jsonText = RequestUtil.readPostContent(request); 

		logger.warn("/message/add入参："+jsonText);
		MerchantsMessage data = JSONObject.parseObject(jsonText, MerchantsMessage.class);
		ResultMessage result = merchantsMessageService.add(data);
		if (result.isSuccess()) {
			return new BaseResponseDto("success","10000");
		}

		return new BaseResponseDto("success","90001");


	}

	

	@RequestMapping(value = "/message/list" ,method = RequestMethod.POST)
	public Object list(HttpServletRequest request) {
		String jsonText = RequestUtil.readPostContent(request); 

		logger.warn("/message/list入参:"+jsonText);
		CommonFrom<MerchantsMessageBean> form = JSONObject.parseObject(jsonText, CommonFrom.class);
		QueryMerchantsResponseDto queryMerchantsResponseDto=new QueryMerchantsResponseDto();

		if(form.getQueryConditions()==null){

			queryMerchantsResponseDto.setErrorMsg("查询失败!");
			queryMerchantsResponseDto.setOffset(form.getOffset());
			queryMerchantsResponseDto.setPageSize(form.getPageSize());
			queryMerchantsResponseDto.setResultCode("10002");
			queryMerchantsResponseDto.setResultType("error");

		}else{

			List list = merchantsMessageService.queryByPage(form);

			if(list==null){
				queryMerchantsResponseDto.setErrorMsg("查询失败!");
				queryMerchantsResponseDto.setOffset(form.getOffset());
				queryMerchantsResponseDto.setPageSize(form.getPageSize());
				queryMerchantsResponseDto.setResultCode("10002");
				queryMerchantsResponseDto.setResultType("error");
				//queryMerchantsResponseDto.setMerchants(list);

			}else{
				queryMerchantsResponseDto.setErrorMsg("查询成功!");
				queryMerchantsResponseDto.setOffset(form.getOffset());
				queryMerchantsResponseDto.setPageSize(form.getPageSize());
				queryMerchantsResponseDto.setResultCode("10000");
				queryMerchantsResponseDto.setResultType("success");
				queryMerchantsResponseDto.setMerchants(list);

			}

		}


		return queryMerchantsResponseDto;


	}
	
}