package com.merchant.web;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSONObject;
import com.merchant.dto.BaseDetailDto;
import com.merchant.dto.BaseDto;
import com.merchant.dto.BaseQueryDto;
import com.merchant.dto.ResultMessage;
import com.merchant.form.MerchantsMpForm;
import com.merchant.model.MerchantsMp;
import com.merchant.service.MerchantsMpService;
import com.merchant.util.RequestUtil;

@RestController
public class MerchantsMpController {
	private final Logger logger = Logger.getLogger(getClass());
 
    @Autowired
	private MerchantsMpService mtsMpService; 

    /**添加接口*/
	@RequestMapping(value = "/mp/add", method = RequestMethod.POST)
	public Object add(HttpServletRequest request) {
		String jsonText = RequestUtil.readPostContent(request); 
		logger.debug("/message/add入参："+jsonText);
		MerchantsMp data = JSONObject.parseObject(jsonText, MerchantsMp.class);
		ResultMessage result = mtsMpService.add(data);
		if (result.isSuccess()) {
			return new BaseDto("success","10000");
		}
		
		return new BaseDto("success","90001");
	}
	
	
	/**查询接口**/
	@RequestMapping(value = "/mp/list", method = RequestMethod.POST)
	public Object list(HttpServletRequest request) {
		String jsonText = RequestUtil.readPostContent(request); 
		MerchantsMpForm form = JSONObject.parseObject(jsonText, MerchantsMpForm.class);
		ResultMessage result = mtsMpService.queryByPage(form);
		if (result.isSuccess()) {
			@SuppressWarnings("unchecked")
			List<MerchantsMp> list = (List<MerchantsMp>) result.getData();
			return new BaseQueryDto<MerchantsMp>("success","10000",form.getOffset(),form.getPageSize(),list);
		}
		
		return new BaseQueryDto<MerchantsMp>("success","90001","查询失败",form.getOffset(),form.getPageSize());
	}
	
	/**根据商户id查询*/
	@RequestMapping(value = "/mp/list/formerchants")
	public Object listFormerchants(HttpServletRequest request) {  
		JSONObject jsonObj = RequestUtil.readToJSONObect(request);
		Integer merchantsId = jsonObj.getInteger("merchantsId");
		Integer offset = jsonObj.getInteger("offset");
		Integer pageSize = jsonObj.getInteger("pageSize");

		if (merchantsId == null || offset == null || pageSize == null) {
			return new BaseQueryDto("success","10001","参数不全",0,0);
		}
		
		ResultMessage result = mtsMpService.queryByPageForMerchants(merchantsId,offset,pageSize);
		if (result.isSuccess()) {
			@SuppressWarnings("unchecked")
			List<MerchantsMp> list = (List<MerchantsMp>) result.getData();
			return new BaseQueryDto<MerchantsMp>("success","10000",offset,pageSize,list);
		}
		
		return new BaseQueryDto<MerchantsMp>("success","90001","查询失败",offset,pageSize);
	}
	
	
	/**更新接口**/
	@RequestMapping(value = "/mp/update", method = RequestMethod.POST)
	public Object update(HttpServletRequest request) { 
		String jsonText = RequestUtil.readPostContent(request);
		MerchantsMp data  = JSONObject.parseObject(jsonText, MerchantsMp.class);
		ResultMessage result = mtsMpService.updateByPrimaryKeySelective(data);
		if (result.isSuccess()) {
			return new BaseDto("success","10000");
		}
		
		return new BaseDto("success","90001");
	}
	
	/**通过ID获取公众号详情接口**/
	@RequestMapping(value = "/mp/get")
	public Object get(Integer id) { 
		ResultMessage result = mtsMpService.findById(id); 
		if (result.isSuccess()) {
			MerchantsMp mp  = (MerchantsMp) result.getData();
			return new BaseDetailDto<MerchantsMp>("success","10000",mp);
		}
		
		return new BaseDetailDto<MerchantsMp>("success","90001","查询失败");
	}
	
	
 
	
	
	
	
    

}